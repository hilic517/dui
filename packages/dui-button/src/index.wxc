<template>
<form report-submit="{{true}}" bindsubmit="onSubmit">
  <button class="btn btn__size--{{size}} btn__{{type}}--{{plain}}" hover-class="{{hoverClass}}" style="{{btnStyle}}" loading="{{loading}}" form-type="submit" open-type="{{openType}}" app-parameter="{{appParameter}}" hover-stop-propagation="{{hoverStopPropagation}}"
    hover-start-time="{{hoverStartTime}}" hover-stay-time="{{hoverStayTime}}" lang="{{lang}}" session-from="{{sessionFrom}}" send-message-title="{{sendMessageTitle}}" send-message-path="{{sendMessagePath}}" send-message-img="{{sendMessageImg}}" show-message-card="{{showMessageCard}}"
    bindtap="btnClick" bindgetuserinfo="getUserInfo" bindcontact="onContact" bindgetphonenumber="getPhoneNumber" binderrror="onError">
    {{value}}
    <slot wx:if="{{!value}}"></slot>
  </button>
</form>
</template>

<script>
export default {
  config: {
    usingComponents: {}
  },
  behaviors: [],
  properties: {
    size: {
      type: String,
      value: "normal" // normal small large
    },
    type: {
      type: String,
      value: '' //beauty selection success primary danger warning secondary info dark disabled  按钮的样式类型
    },
    plain: {
      type: Boolean,
      value: false // 按钮是否镂空，背景色透明
    },
    value: {
      type: String,
      value: ""
    },
    hoverClass: {
      type: String,
      value: "btn__hover" // btn__hover none
    },
    loading: {
      type: Boolean,
      value: false // 名称前是否带 loading 图标
    },
    btnStyle: {
      type: String,
      value: ""
    },
    openType: {
      type: String,
      value: ""
    },
    appParameter: {
      type: String,
      value: ""
    },
    hoverStopPropagation: {
      type: Boolean,
      value: false
    },
    hoverStartTime: {
      type: [Number, String],
      value: 20
    },
    hoverStayTime: {
      type: [Number, String],
      value: 70
    },
    lang: {
      type: String,
      value: "en"
    },
    sessionFrom: {
      type: String,
      value: ""
    },
    sendMessageTitle: {
      type: String,
      value: ""
    },
    sendMessagePath: {
      type: String,
      value: ""
    },
    sendMessageImg: {
      type: String,
      value: ""
    },
    showMessageCard: {
      type: Boolean,
      value: false
    }
  },
  data: {},
  methods: {
    onSubmit(event) {
      let detail = event.detail;
      let option = {};
      this.triggerEvent('submit', detail, option);
    },
    btnClick(event) {
      let detail = event.detail;
      let option = {};
      this.triggerEvent('click', detail, option);
    },
    getUserInfo(event) {
      let detail = event.detail;
      let option = {};
      this.triggerEvent('getuserinfo', detail, option);
    },
    onContact(event) {
      let detail = event.detail;
      let option = {};
      this.triggerEvent('contact', detail, option);
    },
    getPhoneNumber(event) {
      let detail = event.detail;
      let option = {};
      this.triggerEvent('getphonenumber', detail, option);
    },
    onError(event) {
      let detail = event.detail;
      let option = {};
      this.triggerEvent('errror', detail, option);
    }
  }
}
</script>

<style lang="less">
.btn {
  display: inline-block;
  margin: 0;
  border: 1px solid transparent;
  border-radius: 4rpx;
  white-space: nowrap;
  vertical-align: middle;
  font-weight: 400;
  &::after{
    content: none;
  }
  /* size 属性 large, normal, small*/
  &__size--large{
    width: 690rpx;
    height: 90rpx;
    line-height: 90rpx;
    padding: 0 24rpx;
    font-size: 36rpx;
  }
  &__size--normal {
    display: inline-block;
    min-width: 180rpx;
    height: 66rpx;
    line-height: 66rpx;
    padding: 0 24rpx;
    font-size: 28rpx;
  }

  &__size--small {
    display: inline-block;
    min-width: 102rpx;
    height: 48rpx;
    line-height: 48rpx;
    padding: 0 24rpx;
    font-size: 24rpx;
  }
  /* type 属性 */
  &__selection--false {
      color: #333;
      background-color: @selectionColor;
      border-color: @selectionColor;
  }
  &__selection--true {
      color: #333;
      background: transparent none;
      border-color: @selectionColor;
  }
  &__beauty--false {
      color: #fff;
      background-color: @brandColor;
      border-color: @brandColor;
  }
  &__beauty--true {
      color: @brandColor;
      background: transparent none;
      border-color: @brandColor;
  }
  &__primary--false {
      color: #fff;
      background-color: @primaryColor;
      border-color: @primaryColor;
  }
  &__primary--true {
      color: @primaryColor;
      background: transparent none;
      border-color: @primaryColor;
  }
  &__success--false {
      color: #fff;
      background-color: @successColor;
      border-color: @successColor;
  }
  &__success--true {
      color: @successColor;
      background: transparent none;
      border-color: @successColor;
  }
  &__danger--false {
      color: #fff;
      background-color: @dangerColor;
      border-color: @dangerColor;
  }
  &__danger--true {
      color: @dangerColor;
      background: transparent none;
      border-color: @dangerColor;
  }
  &__warning--false {
      color: #212529;
      background-color: @warningColor;
      border-color: @warningColor;
  }
  &__warning--true {
      color: @warningColor;
      background: transparent none;
      border-color: @warningColor;
  }
  &__secondary--false {
      color: #fff;
      background-color: @secondaryColor;
      border-color: @secondaryColor;
  }
  &__secondary--true {
      color: @secondaryColor;
      background: transparent none;
      border-color: @secondaryColor;
  }
  &__info--false {
      color: #fff;
      background-color: @infoColor;
      border-color: @infoColor;
  }
  &__info--true {
      color: @infoColor;
      background: transparent none;
      border-color: @infoColor;
  }
  &__dark--false {
      color: #fff;
      background-color: @darkColor;
      border-color: @darkColor;
  }
  &__dark--true {
      color: @darkColor;
      background: transparent none;
      border-color: @darkColor;
  }
  &__disabled--false {
      color: #fff;
      background-color: #d2d2d2;
      border-color: #d2d2d2;
  }
  &__disabled--true {
      color: #333;
      background: transparent none;
      border-color: #999;
  }

  /* hover */
  &__hover {
      opacity: 0.9;
  }
}
</style>
